# Application name
spring.application.name=whatsapp-messenger-backend
# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/whatsapp_chat
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
# File upload directories
app.file.upload-dir=./uploads/
app.file.picture-dir=./uploads/pictures/
app.file.video-dir=./uploads/videos/
# JWT Configuration
jwt.secret=your-secret-key-here-make-it-long-and-secure-in-production
jwt.expiration=86400000
# Server configuration
server.port=8090
server.servlet.context-path=/api
# Swagger/OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.info.title=WhatsApp Messenger Backend API
springdoc.info.description=WhatsApp-like chat backend API documentation
springdoc.info.version=1.0.0
springdoc.info.contact.name=WhatsApp Backend Team
springdoc.info.contact.email=support@whatsapp-backend.com
# Logging configuration
logging.level.com.whatsapp=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
# Kafka Configuration (temporarily disabled)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=whatsapp-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# Kafka Topics
kafka.topic.message-events=message-events
kafka.topic.user-events=user-events
kafka.topic.notification-events=notification-events
# Kafka Admin Configuration (auto-create topics)
spring.kafka.admin.auto-create=true
spring.kafka.admin.properties.auto.create.topics.enable=true
Kafka Consumer Error Handling
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.ack-mode=manual