# Application name
spring.application.name=whatsapp-messenger-backend

# Server configuration
server.port=${PORT:8090}
server.servlet.context-path=/api

# Database configuration - DatabaseConfig.java will handle Railway DATABASE_URL
# For local development, set these environment variables:
# DATABASE_URL=jdbc:postgresql://localhost:5432/whatsapp_chat
# DB_USERNAME=postgres
# DB_PASSWORD=password

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# File upload directories
app.file.upload-dir=./uploads/
app.file.picture-dir=./uploads/pictures/
app.file.video-dir=./uploads/videos/

# JWT Configuration
jwt.secret=${JWT_SECRET:your-secret-key-change-in-production}
jwt.expiration=86400000

# Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator

# Logging for debugging
logging.level.com.whatsapp=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN

# Kafka Configuration (Disabled for free tier deployment)
# Comment out Kafka properties for free deployment
# spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
# spring.kafka.consumer.group-id=whatsapp-group
# spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.admin.auto-create-topics=true

# Kafka Topics
app.kafka.topics.message-events=message-events
app.kafka.topics.user-events=user-events
app.kafka.topics.notification-events=notification-events

# Disable problematic system metrics for Railway/Micrometer bug
management.metrics.enable.system=false